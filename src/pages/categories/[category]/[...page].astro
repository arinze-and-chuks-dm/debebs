---
import { type Page } from "astro";

// main layout
import BaseLayout from "@layouts/BaseLayout.astro";

// components
import PostCard from "@components/PostCard/PostCardVertical.astro";
import Pagination from "@components/Pagination/Pagination.astro";
import PaginationSimple from "@components/Pagination/PaginationSimple.astro";
import Newsletter from "@components/Cta/NewsletterLarge.astro";
import AboutCard from "@components/SidebarCards/AboutCard.astro";
import RecentPostsCard from "@components/SidebarCards/RecentPostsCard.astro";

// utils
import { getAllPosts, countItems } from "@js/blogUtils";
import { humanize, categorify, slugify } from "@js/textUtils";

// generate pagination for tag pages if there are a bunch of posts for a single tag
export async function getStaticPaths({ paginate }) {
  const posts = await getAllPosts();

  // get all tags from the posts
  const allCategories = posts.map((post) => post.data.categories).flat();

  // combine tags and count how many times they appear. these are "slugified"
  const countedCategories = countItems(allCategories);

  // pagination returns an array of objects with params and page size
  return Object.entries(countedCategories).flatMap(([category, val]) => {
    // get all posts that have the tag
    const filteredPosts = posts.filter((post) => {
      // make sure to slugify them for comparison
      const slugifiedCategories = post.data.categories.map((category) =>
        slugify(category),
      );
      return slugifiedCategories.includes(category);
    });

    return paginate(filteredPosts, {
      params: { category: category },
      pageSize: 6,
    });
  });
}

const { page } = Astro.props as { page: Page };
const { category } = Astro.params as { category: string };

const formattedCategory = categorify(category);
---

<BaseLayout
  title={`${humanize(formattedCategory)} - Blog posts`}
  description={`A collection of blog posts about ${formattedCategory}`}
>
  <div class="site-container pt-24 md:pt-36">
    <h1 class="h1 text-center">
      Blog posts about <span class="main-text-gradient"
        >{formattedCategory.toLowerCase()}</span
      >
    </h1>
    <div class="mt-8 grid gap-10 md:grid-cols-8 lg:grid-cols-11">
      <div class="flex flex-col gap-10 md:col-span-8">
        {
          page.data.map((post) => (
            <PostCard post={post} showDescription={true} data-aos="fade-up" />
          ))
        }

        <!-- Pagination -->
        <div class="flex justify-center">
          <Pagination
            basePath={`/categories/${category}/`}
            prevUrl={page.url.prev}
            currPage={page.currentPage}
            nextUrl={page.url.next}
            lastPage={page.lastPage}
          />

          <!-- <PaginationSimple
            prevUrl={page.url.prev}
            currPage={page.currentPage}
            nextUrl={page.url.next}
            lastPage={page.lastPage}
          /> -->
        </div>
      </div>

      <aside class="hidden lg:col-span-3 lg:block">
        <div class="hidden flex-col gap-10 lg:col-span-4 lg:flex">
          <AboutCard />
          <!-- <RecentPostsCard /> -->
        </div>
      </aside>
    </div>
  </div>
  <Newsletter />
</BaseLayout>
