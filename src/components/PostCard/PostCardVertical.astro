---
import { Image } from "astro:assets"
import { type CollectionEntry } from "astro:content"

// components
import Button from "@components/Button/Button.astro"
import Category from "@components/Category/Category.astro"

// utils
import { formatDate } from "@js/textUtils"

interface Props {
  post: CollectionEntry<"blog">;
  showDescription?: boolean;
  class?: string;
  rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const {
  post,
  showDescription = false,
  class: className,
  ...rest
} = Astro.props as Props;
const { title, description, pubDate, heroImage, categories } = post.data;
---

<article class=`grid xs:grid-cols-12 xs:gap-6 ${className}` {...rest}>
  <a class="xs:col-span-5" href={`/blog/${post.slug}/`}>
    <p class="sr-only">{title}</p>
    <div
      class="aspect-[2/3] shrink-0 justify-center overflow-hidden rounded-sm border border-base-100 xs:justify-normal"
    >
      <figure class="h-full">
        <Image
          src={heroImage}
          alt={`cover for ${title}`}
          height={700}
          quality="high"
          class="h-full object-cover transition-all duration-1000 hover:scale-[1.02]"
          transition:name={`blog-image-${post.slug}`}
        />
      </figure>
    </div>
  </a>
  <div class="w-full xs:col-span-7 sm:mt-10">
    <div class="mt-3 flex w-full flex-wrap gap-2 text-sm">
      <!-- categories -->
      <div class="flex items-center gap-3">
        <div class="flex flex-wrap items-center">
          {
            categories.map((category, idx) => {
              {
                if (idx > 0) {
                  return (
                    <>
                      <span class="description text-sm">,</span>
                      <Category class="ml-2" category={category} />
                    </>
                  );
                }
              }
              return <Category category={category} />;
            })
          }
        </div>
      </div>

      <span>&bull;</span>

      <!-- published date -->
      <div class="description xl:text-sm">
        <div class="flex">
          <p class="whitespace-nowrap font-light uppercase">
            {formatDate(pubDate)}
          </p>
        </div>
      </div>
    </div>

    <!-- title -->
    <div class="mt-3">
      <a
        href={`/blog/${post.slug}/`}
        class="transition duration-300 hover:text-primary-500"
      >
        <h2
          class="font-serif text-2xl font-medium md:text-4xl md:leading-[3.5rem]"
        >
          {title}
        </h2>
      </a>
    </div>

    <!-- description -->
    {
      showDescription && (
        <p class="description mt-3 text-sm md:text-base lg:leading-7 line-clamp-4 text-ellipsis">
          {description}
        </p>
      )
    }

    <!-- Read more button -->
    <div class="mt-5 xs:flex">
      <Button variant="ghost" href={`/blog/${post.slug}/`}>
        Read more
      </Button>
    </div>
  </div>
</article>
